services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password

  postgre:
    image: postgres:latest  # Imagem do PostgreSQL
    container_name: postgres_db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cloudcash
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  discovery:
    image: gabrieljacobina/discovery-service:latest
    container_name: discovery
    build:
      context: ./discovery
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - EUREKA_URI=http://discovery:8084/eureka/

  gateway:
    image: gabrieljacobina/gateway-service:latest
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - EUREKA_URI=http://discovery:8084/eureka/
      - SPRING_CLOUD_CLIENT_HOSTNAME=gateway
    depends_on:
      - discovery

  payment:
    image: gabrieljacobina/payment-service:latest
    container_name: payment
    build:
      context: ./payment
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - EUREKA_URI=http://discovery:8084/eureka/
      - KAFKA_HOST=kafka
      - MONGO_HOST=mongo
      - MONGO_PASSWORD=password
      - MONGO_USER=root
      - SPRING_CLOUD_CLIENT_HOSTNAME=payment
    depends_on:
      - discovery
      - gateway
      - kafka
      - mongo

  transfer:
    image: gabrieljacobina/transfer-service:latest
    container_name: transfer
    build:
      context: ./transfer
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - EUREKA_URI=http://discovery:8084/eureka/
      - KAFKA_HOST=kafka
      - SPRING_CLOUD_CLIENT_HOSTNAME=transfer
    depends_on:
      - discovery
      - gateway
      - kafka

  user:
    image: gabrieljacobina/user-service:latest
    container_name: user
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - EUREKA_URI=http://discovery:8084/eureka/
      - POSTGRE_HOST=postgre
      - POSTGRE_PASSWORD=password
      - POSTGRE_USER=root
      - KAFKA_HOST=http://kafka
      - SPRING_CLOUD_CLIENT_HOSTNAME=user
    depends_on:
      - discovery
      - gateway
      - postgre
      - kafka

volumes:
  mongo-data:
    driver: local

  postgres_data:
